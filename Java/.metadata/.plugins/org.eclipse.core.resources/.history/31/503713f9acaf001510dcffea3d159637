package Recursion;

import java.util.Random;

public class QuickSort {
	public static int countLess=0;
	public static int countGreather=0;
	public static int countArr=0;
	
	public static void main(String[] args){
		int[] arr = new int[10]; 
		Random random = new Random();
		for (int i = 0; i < arr.length; i++) {
			arr[i]=random.nextInt(100);
		}
		quickSort(arr);
	}

	private static int[] quickSort(int[] arr) {
		
		if(arr.length<=1){
			return arr;
		}
		
		int pivot = selectPivot(arr);
		
		int[] less=new int[arr.length];
		int[] greater=new int[arr.length];
		
		
		for (int i : arr) {
			if(i<pivot){
				less[countLess] = i;
				countLess++;
			}else if(i>pivot){
				greater[countGreather]=i;
				countGreather++;
			}
		}
		 less = quickSort(less);
		    greater = quickSort(greater);

		    return concatenate(less, pivot, greater);

	}

	private static int[] concatenate(int[] less, int pivot, int[] greater) {
		int[] result = new int[less.length+greater.length+1];

	    for (Integer num : less) {
	      result[countArr] = num;
	      countArr++;
	    }
	    result[countArr] = pivot;
	    for (Integer num : greater) {
	      result[countArr]=num;
	      countArr++;
	    }

	    return result;
		
		
	}

	private static int selectPivot(int[] arr) {
		int c = arr.length-1;
		int b = c/2;
		int a=(arr[0]+arr[b]+arr[c])/2;
		return a;
	}
}